
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

ADD_LIBRARY(trax SHARED trax.c region.c strmap.c)

ADD_EXECUTABLE(dummy trackers/dummy.c)

TARGET_LINK_LIBRARIES(dummy trax m)

SET (BUILD_CAMSHIFT FALSE CACHE BOOL "Build an example using OpenCV CamShift tracker")

IF (BUILD_CAMSHIFT)
	FIND_PACKAGE(OpenCV REQUIRED)
	INCLUDE_DIRECTORIES(AFTER ${OpenCV_INCLUDE_DIR})
	ADD_EXECUTABLE(camshift trackers/camshift.c)
	TARGET_LINK_LIBRARIES(camshift ${OpenCV_LIBS} trax m)
ENDIF (BUILD_CAMSHIFT)

SET (BUILD_CLIENT FALSE CACHE BOOL "Build a client executable")

IF (BUILD_CLIENT)
    ADD_EXECUTABLE(traxclient client/client.cpp client/process.cpp client/threads.c client/overlap.cpp)
    TARGET_LINK_LIBRARIES(traxclient trax)
ENDIF (BUILD_CLIENT)

SET(CMAKE_CXX_FLAGS -pthread)

IF (WIN32)
	INSTALL(TARGETS trax RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX} LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX} ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX})
	INSTALL(FILES trax.h DESTINATION include)
    IF (BUILD_CLIENT)
    	#INSTALL(TARGETS traxclient RUNTIME DESTINATION bin)
    ENDIF (BUILD_CLIENT)
ENDIF (WIN32)

IF (UNIX)
	INSTALL(TARGETS trax LIBRARY DESTINATION lib)
	INSTALL(FILES trax.h DESTINATION include)
    IF (BUILD_CLIENT)
    	INSTALL(TARGETS traxclient RUNTIME DESTINATION bin)
    ENDIF (BUILD_CLIENT)
ENDIF (UNIX)

ADD_TEST(NAME ClientSimple WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} COMMAND traxclient -h)

ADD_TEST(NAME ClientDummy WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} 
		COMMAND traxclient -I ${CMAKE_CURRENT_BINARY_DIR}/../testing/images.txt -r 1 -f 0.1 -d -G ${TESTING_PATH}/rectangles.txt ${CMAKE_CURRENT_BINARY_DIR}/dummy)








